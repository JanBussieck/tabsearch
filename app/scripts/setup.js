// Generated by CoffeeScript 1.8.0
(function() {
  var OVERLAY_HTML, TabListView, TabView;

  OVERLAY_HTML = "<div id = 'tabsearch-overlay' style= \"display:none\">\n   <div id = \"box\">\n      <input type = \"text\"> </input>\n      <div id= \"results\">\n         <ul></ul>\n      </div>\n   </div>\n</div>";

  TabView = (function() {
    function TabView(tab, indexes) {
      this.tab = tab;
      this.url = removeProtocol(this.tab.url);
      this.indexes = indexes;
    }

    TabView.prototype.render = function() {
      var html, i, j, _i, _ref;
      html = '<li>';
      if (this.tab.favIconUrl != null) {
        html += "<img class='favicon' src='" + this.tab.favIconUrl + "'></img>";
      }
      html += '<span class="title">';
      html += this.tab.title;
      html += '</span>';
      html += '<div class="url">';
      j = 0;
      for (i = _i = 0, _ref = this.url.length; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
        if ((this.indexes != null) && this.indexes[j] === i) {
          html += "<b>" + (this.url.charAt(i)) + "</b>";
          j++;
        } else {
          html += this.url.charAt(i);
        }
      }
      html += '</div></div>';
      return html += '</li>';
    };

    return TabView;

  })();

  TabListView = (function() {
    function TabListView(element) {
      this.element_ = element;
    }

    TabListView.prototype.update = function(candidates) {
      var candidate;
      return this.tabViews = (function() {
        var _i, _len, _results;
        _results = [];
        for (_i = 0, _len = candidates.length; _i < _len; _i++) {
          candidate = candidates[_i];
          _results.push(new TabView(candidate.tab || candidate, candidate.indexes));
        }
        return _results;
      })();
    };

    return TabListView;

  })();

}).call(this);

//# sourceMappingURL=setup.js.map
